from django.test import TestCase
from lists.views import home_page
from django.urls.base import resolve
from django.http.request import HttpRequest
from django.template.loader import render_to_string
# from django.core.urlresolvers import resolve

class HomePageTest(TestCase):
    def test_root_url_resolves_to_home_page_view(self):
        found = resolve('/')
        self.assertEqual(found.func, home_page)
        
    def test_home_page_returns_correct_html(self):
        request = HttpRequest()
        response = home_page(request)
        expected_html = render_to_string('home.html')
        self.assertEqual(response.content.decode(), expected_html)
#         self.assertTrue(response.content.startswith(b'<html>'))
        #startswith是内建函数str的方法
#         self.assertIn(b'<title>To-Do lists</title>', response.content)
#         self.assertTrue(response.content.endswith(b'</html>'))
    
    def test_home_page_can_save_a_POST_request(self):
        #由于加入了csrf的令牌，所以上一个测试test_home_page_returns_correct_html会失败
        request = HttpRequest()
        request.method = 'POST'
        request.POST['item_text'] = 'A new item'
        
        response = home_page(request)
        self.assertIn('A new item', response.content.decode())
        expected_html = render_to_string('home.html', {'new_item_text':'A new list item'})
        print (response.content.decode())
        print (expected_html)
        self.assertEqual(response.content.decode(), expected_html)
        
        
        
        
        
        
        
        
        
        
        
        